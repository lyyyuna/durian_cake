/*
题目2 : 大神与三位小伙伴
时间限制:2000ms
单点时限:1000ms
内存限制:256MB
描述
L国是一个有着优美景色且物产丰富的国家，很多人都喜欢来这里旅游并且喜欢带走一些纪念品，大神同学也不例外。距离开L国的时间越来越近了，大神同学正在烦恼给她可爱的小伙伴们带什么纪念品好，现在摆在大神同学面前的有三类纪念品A, B, C可以选择，每类纪念品各有N种。其中种类为A_i, B_i, C_i的纪念品价值均为i, 且分别有N+1-i个剩余。现在大神同学希望在三类纪念品中各挑选一件然后赠送给她的三名可爱的小伙伴，但是她又不希望恰好挑出来两件价值相同的纪念品，因为这样拿到相同价值纪念品的两位小伙伴就会认为大神同学偏袒另一位小伙伴而不理睬她超过一星期。现在，大神同学希望你买到的三件纪念品能让三位小伙伴都开心并且不和她闹别扭，她想知道一共有多少种不同挑选的方法？

因为方案数可能非常大，大神同学希望知道挑选纪念品的方案数模10^9+7之后的答案。



输入
第一行包括一个数T，表示数据的组数。

接下来包含T组数据，每组数据一行，包括一个整数N。



输出
对于每组数据，输出一行“Case x: ”，其中x表示每组数据的编号(从1开始)，后接一个数，表示模10^9+7后的选择纪念品的方案数。



数据范围
小数据：

1<=T<=10

1<=N<=100

大数据：

1<=T<=1000

1<=N<=10^18



样例解释
对于第二组数据，合法的方案有以下几种，(X,Y,Z)表示选择了A类纪念品中价值为X的，B类纪念品中价值为Y的，C类纪念品中价值为Z的。

(1,1,1): 3*3*3=27种

(1,2,3): 3*2*1=6种

(1,3,2): 3*1*2=6种

(2,1,3): 2*3*1=6种

(2,2,2): 2*2*2=8种

(2,3,1): 2*1*3=6种

(3,1,2): 1*3*2=6种

(3,2,1): 1*2*3=6种

(3,3,3): 1*1*1=1种

一共27+6+6+6+8+6+6+6+1=72种选择纪念品的方案

注意，如(1,1,2), (2,3,3), (3,1,3)都因为恰好选择了两件价值相同的纪念品，所以并不是一种符合要求的纪念品选择方法。







样例输入
2
1
3
样例输出
Case 1: 1
Case 2: 72
*/

#include <iostream>
#include <cmath>

using namespace std;

const long long bignum = 1000000007;

bool isSame(long long a, long long b, long long c)
{
    if (a == b && b == c)
        return true;
    if (a == b)
        return false;
    if (b == c)
        return false;
    if (c == a)
        return false;

    return true;
}

int main()
{
    int T;
    cin >> T;
    
    for (int i = 0; i < T; ++i) {
        long long N;
        cin >> N;
        long long sum = 0;
        for (long long A = 1; A <= N; ++A)
            for (long long B = 1; B <= N; ++B)
                for (long long C = 1; C <= N; ++C) {
                    if (!isSame(A, B, C))
                        continue;
                    long long temp = 0;
                    temp = (N-A+1) * (N-B+1) * (N-C+1);
                    sum = (sum+temp)%bignum;
                }
        cout << "Case " << i+1 << ": " << sum << endl;;
    }

    return 0;
}